
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  address   String?
  createdAt DateTime @default(now())
  orders    Order[]
  reviews   Review[]
  wishlist  Wishlist[]
}

model Book {
  id         Int      @id @default(autoincrement())
  title      String
  author     String
  genre      String?
  price      Decimal
  coverImage String?
  createdAt  DateTime @default(now())
  reviews    Review[]
  orderItems OrderItem[]
  wishlist   Wishlist[]
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  totalAmount Decimal
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

model OrderItem {
  id       Int   @id @default(autoincrement())
  orderId  Int
  order    Order @relation(fields: [orderId], references: [id])
  bookId   Int
  book     Book  @relation(fields: [bookId], references: [id])
  quantity Int
  price    Decimal
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  bookId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  bookId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  addedAt   DateTime @default(now())

  @@unique([userId, bookId])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}